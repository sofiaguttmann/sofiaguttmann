---
title: "Data Wrangling"
author: "Sofia"
format: pdf
editor: visual
---

```{r}
#| label: load-packages
#| warning: false

# load packages
library(tidyverse)
library(kableExtra)
library(robotstxt) 
library(rvest) 
library(purrr) 
library(readr)
library(tidyr)
library(sf) #for reading shape files

# set code chunk defaults
knitr::opts_chunk$set(tidy = F, # display code as typed
                      size = "small", # slightly smaller code font
                      message = FALSE,
                      warning = FALSE,
                      comment = "\t") 

# set black & white default plot theme
theme_set(theme_classic()) 

# improve digit and NA display 
options(scipen = 1, knitr.kable.NA = '')
```

# Data Wrangling and Cleaning

## Data Source 1: Kaggle- Fuel Data

```{r}
#| label: load-exported-csv
#| warning: false

# Read csv file obtained from Database
fuel <- read.csv("fuel.csv")


```

Cleaning

```{r}


# Subset the dataset to include only the specified variables
Fuel_clean <- fuel[, c("year", "engine_cylinders", "fuel_type", "city_mpg_ft1", "tailpipe_co2_in_grams_mile_ft1")]

# View the structure of the cleaned dataset
str(Fuel_clean)



```

## Hclust

```{r}
# Select only the specified columns
Fuel_hclust <- Fuel_clean[, c("year", "engine_cylinders", "city_mpg_ft1", "tailpipe_co2_in_grams_mile_ft1")]

# View the structure of the cleaned dataset
str(Fuel_hclust)

```

```{}
```

```{r}
# Select only the specified columns
Fuel_hclust <- Fuel_clean[, c("year", "engine_cylinders", "city_mpg_ft1", "tailpipe_co2_in_grams_mile_ft1")]

# View the structure of the cleaned dataset
str(Fuel_hclust) 

# Sample a subset of rows from your dataset
sampled_data <- Fuel_hclust[sample(nrow(Fuel_hclust), 1000), ]

# Scale the sampled data
scaled_data <- scale(sampled_data[, "tailpipe_co2_in_grams_mile_ft1"])

# Perform hierarchical clustering on the scaled data
hclust_result <- hclust(dist(scaled_data), method = "complete")

# Cut the dendrogram to obtain clusters
num_clusters <- 3  # Adjust the number of clusters as needed
cluster_assignment <- cutree(hclust_result, k = num_clusters)

# View cluster assignments
print(cluster_assignment)

# Perform hierarchical clustering with complete linkage
hclust_result <- hclust(dist(scaled_data), method = "complete")

# View cluster assignments
cluster_assignments <- cutree(hclust_result, k = 3)  # Adjust k as needed
print(cluster_assignments)

```

```{r}
# Combine cluster assignments with original data

# View the structure of the combined dataset
str(data_with_clusters)

# Aggregate data by cluster
cluster_summary <- data_with_clusters %>%
  group_by(cluster) %>%
  summarize(
    mean_co2 = mean(tailpipe_co2_in_grams_mile_ft1),
    mean_city_mpg = mean(city_mpg_ft1),
    mean_engine_cylinders = mean(engine_cylinders)
    # Add more summary statistics as needed
  )

# Visualize cluster characteristics
print(cluster_summary)

```

```{r}
library(ggplot2)

# Add cluster assignments to the sampled data
sampled_data$cluster <- factor(cluster_assignments)

# Plot the data points with cluster assignments
ggplot(sampled_data, aes(x = city_mpg_ft1, y = tailpipe_co2_in_grams_mile_ft1, color = cluster)) +
  geom_point() +
  labs(title = "Clustering Visualization", x = "City MPG", y = "Tailpipe CO2 (g/mile)")


```

```{r}
# Plot the dendrogram
plot(hclust_result)
suppressPackageStartupMessages(library(dendextend))
avg_dend_obj <- as.dendrogram(hclust_result)
avg_col_dend <- color_branches(avg_dend_obj, h = 3)
plot(avg_col_dend)
```

### 

```{r}
# Load the required libraries
library(readr)
library(dplyr)
library(ggplot2)


# Select relevant variable
variable <- "tailpipe_co2_in_grams_mile_ft1"

# Sample the dataset (optional)
set.seed(123)  # Set seed for reproducibility
sampled_data <- Fuel_hclust %>% sample_n(500)  # Adjust the number of samples as needed

# Normalize the data (optional)
scaled_data <- scale(sampled_data[[variable]])

# Compute the distance matrix
distance_matrix <- dist(scaled_data)

# Perform hierarchical clustering
hierarchical_clusters <- hclust(distance_matrix, method = "ward.D2")

# Plot the dendrogram
plot(hierarchical_clusters, main = "Dendrogram of Hierarchical Clustering", xlab = "", ylab = "Distance")

# Cut the dendrogram to get clusters
num_clusters <- 3  # You can adjust this based on the dendrogram
clusters <- cutree(hierarchical_clusters, k = num_clusters)

# Add cluster labels to the original dataset
sampled_data$cluster <- clusters

# Visualize the clusters
ggplot(sampled_data, aes(x = tailpipe_co2_in_grams_mile_ft1, y = ..density.., fill = factor(cluster))) +
  geom_density(alpha = 0.5) +
  labs(x = "CO2 Emissions (g/mi)", y = "Density", title = "Clusters Based on CO2 Emissions") +
  scale_fill_discrete(name = "Cluster") +
  theme_minimal()

# Load the required libraries
library(readr)
library(dplyr)
library(ggplot2)

# Select relevant variable
variable <- "tailpipe_co2_in_grams_mile_ft1"

# Sample the dataset (optional)
set.seed(123)  # Set seed for reproducibility
sampled_data <- Fuel_hclust %>% sample_n(500)  # Adjust the number of samples as needed

# Normalize the data (optional)
scaled_data <- scale(sampled_data[[variable]])

# Compute the distance matrix
distance_matrix <- dist(scaled_data)

# Perform hierarchical clustering
hierarchical_clusters <- hclust(distance_matrix, method = "ward.D2")

# Plot the dendrogram
plot(hierarchical_clusters, main = "Dendrogram of Hierarchical Clustering", xlab = "", ylab = "Distance")

# Cut the dendrogram to get clusters
num_clusters <- 3  # You can adjust this based on the dendrogram
clusters <- cutree(hierarchical_clusters, k = num_clusters)

# Add cluster labels to the original dataset
sampled_data$cluster <- clusters

# Calculate summary statistics by cluster
summary_stats <- sampled_data %>%
  group_by(cluster) %>%
  summarise(
    mean_co2 = mean(tailpipe_co2_in_grams_mile_ft1, na.rm = TRUE),
    sd_co2 = sd(tailpipe_co2_in_grams_mile_ft1, na.rm = TRUE),
    mean_city_mpg = mean(city_mpg_ft1, na.rm = TRUE),
    sd_city_mpg = sd(city_mpg_ft1, na.rm = TRUE),
    mean_engine_cylinders = mean(engine_cylinders, na.rm = TRUE),
    sd_engine_cylinders = sd(engine_cylinders, na.rm = TRUE)
  )

# Print summary statistics
print(summary_stats)

```

```{r}
library(dplyr)


set.seed(42)  # For reproducibility
sampled_data <- Fuel_hclust %>% sample_n(1000)  # Sample 1000 rows randomly

dist_matrix <- dist(sampled_data[, c("tailpipe_co2_in_grams_mile_ft1", "city_mpg_ft1", "engine_cylinders")])



# Aggregate data by cluster
cluster_summary <- data_with_clusters %>%
  group_by(cluster) %>%
  summarize(
    mean_co2 = mean(tailpipe_co2_in_grams_mile_ft1),
    mean_city_mpg = mean(city_mpg_ft1),
    mean_engine_cylinders = mean(engine_cylinders)
    # Add more summary statistics as needed
  )

# Visualize cluster characteristics
print(cluster_summary)

```
